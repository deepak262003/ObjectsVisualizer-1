@page "/Components/getModel"
@inject Services.SpinnerService spinner;
@inject IFilePath _FilePath;
@inject Callbacks _Callbacks;

@using Pages.Components;
@using System.Threading.Tasks;
@using System.Text;
@using Microsoft.Extensions.Configuration;

@inject IConfiguration config
@inject IJSRuntime JSRuntime

@* <button class="btn btn-primary" @onclick="@processRequest">Load Model</button>  *@
    <div class="page-wrap">
    <DisplayModelJS data=@model></DisplayModelJS>
   
    @if (models==null || models.Count == 0)
    {
    <SurveyPrompt Title="Oops... No models found.." />
    }
    else{
    <div class="container parent-con">
            <div class="row gx-3">
    @foreach (KeyValuePair<string,string> model in models){
    string id = model.Key;
    string directory = model.Value;
            <div class="col-md-3 mt-3">
            <div class="image-wrap">
            <Thumbnails id="@id" LoadModelT="@processRequest" dir="@directory"/> 
            </div>
            </div>
    }
        </div>
    </div>
    }
    </div>
 <p>@result</p> 
<br/>
<br/>


@code {

    [Parameter]
    public Dictionary <string , string>? models { get; set; }
    private string? imgSrc;
    private string? result;
    private byte[]? model;
    private string? uri;

    HttpClient http = new HttpClient();

    public  async Task processRequest()
    {
        uri = config["azure-container"] + "/" + _FilePath.GetModelDir() + "/" + _FilePath.GetModel() + "?" + config["azure-sas"];

        try
        {
            var response = await http.GetAsync(uri);
            if (response.IsSuccessStatusCode)
            {
                var data = await response.Content.ReadAsByteArrayAsync();
                model = data;
                result = "success";
            }
            else
            {
                result = "failed";
                throw new HttpRequestException("HTTP request failed");
            }
        }
        catch (Exception ex)
        {
            result = "failed";
            Console.WriteLine($"error : {ex.Message}");
        } 
    }
}
